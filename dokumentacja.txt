Maksymilian Dec,
Mikołaj Guz,
Paweł Hermansdorfer,
Amelia Szymańska                                                                                            26.05.2025r.
========================================================================================================================
Systemy wbudowane - projekt zaliczeniowy ===============================================================================

Projekt polega na optymalizacji przydziału zadań nieprzewidzianych przy pomocy metaheurystyki GWO (Grey Wolf Optimizer).  

========================================================================================================================
Działanie ==============================================================================================================

* wczytuje architekture systemu wbudowanego oraz graf zadań
* tworzy populacje
** losowo wybiera zadania po podziału na losową liczbę podzadań (min.3)
** podzadań wybiera 3, które stanowią rozwiązanie zadania nieprzewidzianego
* wykonuje kolejne kroki GWO do osiągnięcia maksymalnej liczby iteracji albo
    gdy wynik najlepszego osobnika się nie poprawia
* wypisuje na wyjście m.in informacje o końcowym przydziale zadań do procesorów, całkowity koszt i czas,
    czasy wykonywania poszczególnych zadań, jakie podzadania zostały wykorzystane do rozwiązania zadań nieprzewidzianych
    oraz podział zadań na podzadania.

========================================================================================================================
Uruchomienie ===========================================================================================================

* umieść architekture w \data\architektura.txt                          (opcjonalne, domyślna architektura już tam jest)
* umieść graf w \data\test.txt                                                  (opcjonalne, domyślny graf już tam jest)
* upewnij się, że na komputerze masz zainstalowane:
** interpreter Pythona w wersji 3.10
** biblioteke Numpy 2.2.0
** biblioteke Matplotlib 3.10.0
* uruchom z konsoli - python main.py

========================================================================================================================
Technikalia ============================================================================================================

Przedstawienie pojedynczej instancji osobnika (wilka)
# solution = [
#               subtask configuration idx for UT_0,
#               subtask configuration idx for UT_1,
#               ...,
#               subtask configuration idx for UT_N,
#               PP proc idx for 1'st subtask
#               PP proc idx for 2'nd subtask
#               ...,
#               PP proc idx for N'th subtask
#            ]
